TERM = { '.', s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32 };
null = '.';
s = 63;
n = 24;
min = 52;
UNARYOP = [ MLOAD_0, ISZERO_0, ISZERO_1, MLOAD_1, MLOAD_2, MLOAD_3, MLOAD_4, MLOAD_5 ];
unin = [ s23, s1, s2, s6, s13, s17, s24, s0 ];
unout = [ s1, s2, s3, s7, s14, s18, s20, s21 ];
ungas = [ 3, 3, 3, 3, 3, 3, 3, 3 ];
unsz = [ 1, 1, 1, 1, 1, 1, 1, 1 ];
unlb = [ 8, 9, 10, 18, 32, 42, 2, 1 ];
unub = [ 47, 48, 49, 52, 56, 60, 45, 44 ];
BINARYOP = [ ADD_0, AND_0, ADD_1, SUB_0, SHL_0, ADD_2, AND_1, ADD_3, ADD_4, AND_2, ADD_5, ADD_6, ADD_7, ADD_8 ];
binin1 = [ s20, s7, s0, s9, s26, s20, s14, s0, s20, s18, s0, s20, s20, s0 ];
binin2 = [ s24, s8, s24, s25, s25, s27, s28, s27, s29, s30, s29, s31, s32, s32 ];
binout = [ s4, s5, s6, s8, s9, s11, s12, s13, s15, s16, s17, s19, s22, s23 ];
bincomm = [ true, true, true, false, false, true, true, true, true, true, true, true, true, true ];
bingas = [ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 ];
binsz = [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ];
binlb = [ 4, 24, 2, 5, 3, 4, 34, 2, 4, 44, 2, 4, 4, 2 ];
binub = [ 54, 53, 51, 52, 51, 58, 57, 55, 62, 61, 59, 62, 50, 46 ];
PUSHOP = [ 'PUSH [tag]_0', PUSH_0, PUSH_1, PUSH_2, PUSH_3, PUSH_4, PUSH_5, PUSH_6, PUSH_7, PUSH_8 ];
pushout = [ s10, s24, s25, s26, s27, s28, s29, s30, s31, s32 ];
pushgas = [ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 ];
pushsz = [ 3, 2, 2, 2, 2, 5, 2, 7, 2, 2 ];
pushlb = [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ];
pushub = [ 63, 60, 50, 50, 57, 56, 61, 60, 61, 49 ];
STOROP = [ MSTORE_0, MSTORE_1, MSTORE_2, MSTORE_3, MSTORE_4 ];
storin1 = [ s20, s22, s4, s11, s15 ];
storin2 = [ s21, s3, s5, s12, s16 ];
storlb = [ 4, 14, 28, 38, 48 ];
storub = [ 46, 51, 55, 59, 63 ];
ZEROARYOP = [ ZEROARYOP_dummy ];
zeroout = [ null ];
zerogas = [ 0 ];
zerosz = [ 0 ];
zerolb = [ 1 ];
zeroub = [ 63 ];
startstack = [ s0 ];
endstack = [ s10, s19 ];
before = [ S(MSTORE_3), S(MSTORE_2), S(MSTORE_1), S(MSTORE_0), U(MLOAD_3), U(MLOAD_2), U(MLOAD_1), U(MLOAD_0), U(MLOAD_5), U(MLOAD_4), U(MLOAD_4), U(MLOAD_4), U(MLOAD_4), U(MLOAD_4) ];
after = [ U(MLOAD_3), U(MLOAD_2), U(MLOAD_1), U(MLOAD_0), S(MSTORE_4), S(MSTORE_3), S(MSTORE_2), S(MSTORE_1), S(MSTORE_0), S(MSTORE_0), S(MSTORE_1), S(MSTORE_2), S(MSTORE_3), S(MSTORE_4) ];
%PUSH 40 MLOAD PUSH [tag] 33 SWAP2 SWAP1 PUSH0 PUSH a0 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH 20 DUP4 ADD MLOAD ISZERO ISZERO PUSH 20 DUP4 ADD MSTORE PUSH 1 PUSH 1 PUSH 70 SHL SUB PUSH 40 DUP5 ADD MLOAD AND PUSH 40 DUP4 ADD MSTORE PUSH ffffffff PUSH 60 DUP5 ADD MLOAD AND PUSH 60 DUP4 ADD MSTORE PUSH ffffffffffff PUSH 80 DUP5 ADD MLOAD AND PUSH 80 DUP4 ADD MSTORE SWAP3 SWAP2 POP POP
