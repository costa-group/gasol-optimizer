63
Optimizing isolated_block_0_0... Timeout:12
[id: 0, len: 63, min_size: 3, min_pos: 24]

extended_reverse:  ['PUSH_8', 'PUSH_5', 'PUSH_3', 'PUSH_2', 'PUSH_1', 'PUSH_0_1', 'ADD_8', 'ADD_5', 'PUSH_0', 'ADD_3', 'PUSH_1_1', 'SHL_0', 'ADD_1', 'MLOAD_0', 'PUSH_6', 'MLOAD_3', 'PUSH_5_1', 'MLOAD_4', 'PUSH_4', 'MLOAD_2', 'PUSH_3_1', 'SUB_0', 'MLOAD_1', 'PUSH_0_2', 'ISZERO_0', 'PUSH_8_1', 'AND_2', 'ADD_4', 'AND_1', 'ADD_2', 'AND_0', 'ADD_0', 'ISZERO_1', 'ADD_7', 'MLOAD_5', 'PUSH_7', 'MSTORE_4', 'MSTORE_3', 'MSTORE_2', 'MSTORE_1', 'MSTORE_0', 'ADD_6', 'PUSH [tag]_0']
min_pos: 27, min_size: 4
splittocsv: 27;67
Command: /home/nicolas/repos/gasol-optimizer/bin/MiniZincIDE-2.6.4-bundle-linux-x86_64/bin/minizinc --solver Chuffed --time-limit 12000 --output-time --intermediate-solutions -s dzn/evmopt-generic.mzn  /tmp/tmp4de40gv0.dzn
% Generated FlatZinc statistics:
%%%mzn-stat: paths=0
%%%mzn-stat: flatBoolVars=27043
%%%mzn-stat: flatIntVars=4982
%%%mzn-stat: flatBoolConstraints=15525
%%%mzn-stat: flatIntConstraints=28948
%%%mzn-stat: evaluatedReifiedConstraints=14014
%%%mzn-stat: evaluatedHalfReifiedConstraints=13281
%%%mzn-stat: eliminatedImplications=1323
%%%mzn-stat: method="minimize"
%%%mzn-stat: flatTime=0.671237
%%%mzn-stat-end
                      s0  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
 1:DUP(1)             s0  s0  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
 2:P(PUSH_4)          s28 s0  s0  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
 3:P(PUSH_1)          s25 s28 s0  s0  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
 4:DUP(4)             s0  s25 s28 s0  s0  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
 5:P(PUSH_0)          s24 s0  s25 s28 s0  s0  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
 6:U(MLOAD_4)         s20 s0  s25 s28 s0  s0  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
 7:SWAP(5)            s0  s0  s25 s28 s0  s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
 8:SWAP(4)            s0  s0  s25 s28 s0  s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
 9:U(MLOAD_5)         s21 s0  s25 s28 s0  s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
10:DUP(6)             s20 s21 s0  s25 s28 s0  s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
11:S(MSTORE_0)        s0  s25 s28 s0  s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
12:DUP(4)             s0  s0  s25 s28 s0  s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
13:P(PUSH_8)          s32 s0  s0  s25 s28 s0  s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
14:B(ADD_8)           s23 s0  s25 s28 s0  s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
15:U(MLOAD_0)         s1  s0  s25 s28 s0  s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
16:U(ISZERO_0)        s2  s0  s25 s28 s0  s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
17:U(ISZERO_1)        s3  s0  s25 s28 s0  s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
18:DUP(6)             s20 s3  s0  s25 s28 s0  s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
19:P(PUSH_8)          s32 s20 s3  s0  s25 s28 s0  s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
20:B(ADD_7)           s22 s3  s0  s25 s28 s0  s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
21:S(MSTORE_1)        s0  s25 s28 s0  s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
22:P(PUSH_0)          s24 s0  s25 s28 s0  s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
23:B(ADD_1)           s6  s25 s28 s0  s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
24:U(MLOAD_1)         s7  s25 s28 s0  s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
25:DUP(4)             s0  s7  s25 s28 s0  s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
26:SWAP(2)            s25 s7  s0  s28 s0  s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
27:P(PUSH_1)          s25 s25 s7  s0  s28 s0  s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
28:P(PUSH_2)          s26 s25 s25 s7  s0  s28 s0  s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
29:B(SHL_0)           s9  s25 s7  s0  s28 s0  s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
30:B(SUB_0)           s8  s7  s0  s28 s0  s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
31:B(AND_0)           s5  s0  s28 s0  s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
32:DUP(5)             s20 s5  s0  s28 s0  s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
33:P(PUSH_0)          s24 s20 s5  s0  s28 s0  s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
34:B(ADD_0)           s4  s5  s0  s28 s0  s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
35:S(MSTORE_2)        s0  s28 s0  s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
36:P(PUSH_3)          s27 s0  s28 s0  s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
37:B(ADD_3)           s13 s28 s0  s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
38:U(MLOAD_2)         s14 s28 s0  s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
39:B(AND_1)           s12 s0  s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
40:DUP(3)             s20 s12 s0  s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
41:P(PUSH_3)          s27 s20 s12 s0  s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
42:B(ADD_2)           s11 s12 s0  s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
43:S(MSTORE_3)        s0  s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
44:P(PUSH_5)          s29 s0  s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
45:B(ADD_5)           s17 s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
46:U(MLOAD_3)         s18 s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
47:P(PUSH_6)          s30 s18 s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
48:B(AND_2)           s16 s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
49:P(PUSH [tag]_0)    s10 s16 s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
50:SWAP(1)            s16 s10 s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
51:SWAP(1)            s10 s16 s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
52:SWAP(2)            s20 s16 s10 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
53:SWAP(2)            s10 s16 s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
54:DUP(3)             s20 s10 s16 s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
55:SWAP(2)            s16 s10 s20 s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
56:SWAP(1)            s10 s16 s20 s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
57:SWAP(2)            s20 s16 s10 s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
58:P(PUSH_7)          s31 s20 s16 s10 s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
59:B(ADD_6)           s19 s16 s10 s20 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
60:SWAP(3)            s20 s16 s10 s19 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
61:P(PUSH_5)          s29 s20 s16 s10 s19 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
62:B(ADD_4)           s15 s16 s10 s19 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
63:S(MSTORE_4)        s10 s19 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
length = 63;
gas = 189;
bytes = 88; 
solution = [DUP(1), P(PUSH_4), P(PUSH_1), DUP(4), P(PUSH_0), U(MLOAD_4), SWAP(5), SWAP(4), U(MLOAD_5), DUP(6), S(MSTORE_0), DUP(4), P(PUSH_8), B(ADD_8), U(MLOAD_0), U(ISZERO_0), U(ISZERO_1), DUP(6), P(PUSH_8), B(ADD_7), S(MSTORE_1), P(PUSH_0), B(ADD_1), U(MLOAD_1), DUP(4), SWAP(2), P(PUSH_1), P(PUSH_2), B(SHL_0), B(SUB_0), B(AND_0), DUP(5), P(PUSH_0), B(ADD_0), S(MSTORE_2), P(PUSH_3), B(ADD_3), U(MLOAD_2), B(AND_1), DUP(3), P(PUSH_3), B(ADD_2), S(MSTORE_3), P(PUSH_5), B(ADD_5), U(MLOAD_3), P(PUSH_6), B(AND_2), P(PUSH [tag]_0), SWAP(1), SWAP(1), SWAP(2), SWAP(2), DUP(3), SWAP(2), SWAP(1), SWAP(2), P(PUSH_7), B(ADD_6), SWAP(3), P(PUSH_5), B(ADD_4), S(MSTORE_4)]
% time elapsed: 7.11 s
----------
                      s0  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
 1:P(PUSH_0)          s24 s0  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
 2:U(MLOAD_4)         s20 s0  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
 3:P(PUSH_6)          s30 s20 s0  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
 4:DUP(3)             s0  s30 s20 s0  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
 5:P(PUSH_4)          s28 s0  s30 s20 s0  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
 6:SWAP(4)            s0  s0  s30 s20 s28 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
 7:SWAP(4)            s28 s0  s30 s20 s0  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
 8:DUP(5)             s0  s28 s0  s30 s20 s0  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
 9:DUP(5)             s20 s0  s28 s0  s30 s20 s0  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
10:DUP(6)             s20 s20 s0  s28 s0  s30 s20 s0  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
11:DUP(8)             s0  s20 s20 s0  s28 s0  s30 s20 s0  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
12:DUP(8)             s20 s0  s20 s20 s0  s28 s0  s30 s20 s0  .   .   .   .   .   .   .   .   .   .   .   .   .   .  
13:DUP(10)            s0  s20 s0  s20 s20 s0  s28 s0  s30 s20 s0  .   .   .   .   .   .   .   .   .   .   .   .   .  
14:U(MLOAD_5)         s21 s20 s0  s20 s20 s0  s28 s0  s30 s20 s0  .   .   .   .   .   .   .   .   .   .   .   .   .  
15:P(PUSH_1)          s25 s21 s20 s0  s20 s20 s0  s28 s0  s30 s20 s0  .   .   .   .   .   .   .   .   .   .   .   .  
16:P(PUSH_1)          s25 s25 s21 s20 s0  s20 s20 s0  s28 s0  s30 s20 s0  .   .   .   .   .   .   .   .   .   .   .  
17:P(PUSH_2)          s26 s25 s25 s21 s20 s0  s20 s20 s0  s28 s0  s30 s20 s0  .   .   .   .   .   .   .   .   .   .  
18:B(SHL_0)           s9  s25 s21 s20 s0  s20 s20 s0  s28 s0  s30 s20 s0  .   .   .   .   .   .   .   .   .   .   .  
19:B(SUB_0)           s8  s21 s20 s0  s20 s20 s0  s28 s0  s30 s20 s0  .   .   .   .   .   .   .   .   .   .   .   .  
20:SWAP(4)            s20 s21 s20 s0  s8  s20 s0  s28 s0  s30 s20 s0  .   .   .   .   .   .   .   .   .   .   .   .  
21:P(PUSH_7)          s31 s20 s21 s20 s0  s8  s20 s0  s28 s0  s30 s20 s0  .   .   .   .   .   .   .   .   .   .   .  
22:B(ADD_6)           s19 s21 s20 s0  s8  s20 s0  s28 s0  s30 s20 s0  .   .   .   .   .   .   .   .   .   .   .   .  
23:SWAP(11)           s0  s21 s20 s0  s8  s20 s0  s28 s0  s30 s20 s19 .   .   .   .   .   .   .   .   .   .   .   .  
24:SWAP(2)            s20 s21 s0  s0  s8  s20 s0  s28 s0  s30 s20 s19 .   .   .   .   .   .   .   .   .   .   .   .  
25:S(MSTORE_0)        s0  s0  s8  s20 s0  s28 s0  s30 s20 s19 .   .   .   .   .   .   .   .   .   .   .   .   .   .  
26:P(PUSH_8)          s32 s0  s0  s8  s20 s0  s28 s0  s30 s20 s19 .   .   .   .   .   .   .   .   .   .   .   .   .  
27:B(ADD_8)           s23 s0  s8  s20 s0  s28 s0  s30 s20 s19 .   .   .   .   .   .   .   .   .   .   .   .   .   .  
28:U(MLOAD_0)         s1  s0  s8  s20 s0  s28 s0  s30 s20 s19 .   .   .   .   .   .   .   .   .   .   .   .   .   .  
29:U(ISZERO_0)        s2  s0  s8  s20 s0  s28 s0  s30 s20 s19 .   .   .   .   .   .   .   .   .   .   .   .   .   .  
30:U(ISZERO_1)        s3  s0  s8  s20 s0  s28 s0  s30 s20 s19 .   .   .   .   .   .   .   .   .   .   .   .   .   .  
31:DUP(9)             s20 s3  s0  s8  s20 s0  s28 s0  s30 s20 s19 .   .   .   .   .   .   .   .   .   .   .   .   .  
32:P(PUSH_8)          s32 s20 s3  s0  s8  s20 s0  s28 s0  s30 s20 s19 .   .   .   .   .   .   .   .   .   .   .   .  
33:B(ADD_7)           s22 s3  s0  s8  s20 s0  s28 s0  s30 s20 s19 .   .   .   .   .   .   .   .   .   .   .   .   .  
34:S(MSTORE_1)        s0  s8  s20 s0  s28 s0  s30 s20 s19 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
35:P(PUSH_0)          s24 s0  s8  s20 s0  s28 s0  s30 s20 s19 .   .   .   .   .   .   .   .   .   .   .   .   .   .  
36:B(ADD_1)           s6  s8  s20 s0  s28 s0  s30 s20 s19 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
37:U(MLOAD_1)         s7  s8  s20 s0  s28 s0  s30 s20 s19 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
38:B(AND_0)           s5  s20 s0  s28 s0  s30 s20 s19 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
39:SWAP(1)            s20 s5  s0  s28 s0  s30 s20 s19 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
40:P(PUSH_0)          s24 s20 s5  s0  s28 s0  s30 s20 s19 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
41:B(ADD_0)           s4  s5  s0  s28 s0  s30 s20 s19 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
42:S(MSTORE_2)        s0  s28 s0  s30 s20 s19 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
43:P(PUSH_3)          s27 s0  s28 s0  s30 s20 s19 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
44:B(ADD_3)           s13 s28 s0  s30 s20 s19 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
45:U(MLOAD_2)         s14 s28 s0  s30 s20 s19 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
46:B(AND_1)           s12 s0  s30 s20 s19 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
47:DUP(4)             s20 s12 s0  s30 s20 s19 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
48:P(PUSH_3)          s27 s20 s12 s0  s30 s20 s19 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
49:B(ADD_2)           s11 s12 s0  s30 s20 s19 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
50:S(MSTORE_3)        s0  s30 s20 s19 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
51:P(PUSH_5)          s29 s0  s30 s20 s19 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
52:B(ADD_5)           s17 s30 s20 s19 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
53:U(MLOAD_3)         s18 s30 s20 s19 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
54:B(AND_2)           s16 s20 s19 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
55:SWAP(1)            s20 s16 s19 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
56:P(PUSH [tag]_0)    s10 s20 s16 s19 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
57:SWAP(2)            s16 s20 s10 s19 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
58:SWAP(1)            s20 s16 s10 s19 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
59:P(PUSH_5)          s29 s20 s16 s10 s19 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
60:B(ADD_4)           s15 s16 s10 s19 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
61:S(MSTORE_4)        s10 s19 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
62:NOP                s10 s19 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
63:NOP                s10 s19 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  
length = 61;
gas = 183;
bytes = 86; 
solution = [P(PUSH_0), U(MLOAD_4), P(PUSH_6), DUP(3), P(PUSH_4), SWAP(4), SWAP(4), DUP(5), DUP(5), DUP(6), DUP(8), DUP(8), DUP(10), U(MLOAD_5), P(PUSH_1), P(PUSH_1), P(PUSH_2), B(SHL_0), B(SUB_0), SWAP(4), P(PUSH_7), B(ADD_6), SWAP(11), SWAP(2), S(MSTORE_0), P(PUSH_8), B(ADD_8), U(MLOAD_0), U(ISZERO_0), U(ISZERO_1), DUP(9), P(PUSH_8), B(ADD_7), S(MSTORE_1), P(PUSH_0), B(ADD_1), U(MLOAD_1), B(AND_0), SWAP(1), P(PUSH_0), B(ADD_0), S(MSTORE_2), P(PUSH_3), B(ADD_3), U(MLOAD_2), B(AND_1), DUP(4), P(PUSH_3), B(ADD_2), S(MSTORE_3), P(PUSH_5), B(ADD_5), U(MLOAD_3), B(AND_2), SWAP(1), P(PUSH [tag]_0), SWAP(2), SWAP(1), P(PUSH_5), B(ADD_4), S(MSTORE_4), NOP, NOP]
% time elapsed: 7.49 s
----------
% Time limit exceeded!
%%%mzn-stat: nodes=138362
%%%mzn-stat: failures=41785
%%%mzn-stat: restarts=2
%%%mzn-stat: variables=351049
%%%mzn-stat: intVars=5402
%%%mzn-stat: boolVariables=345645
%%%mzn-stat: propagators=29893
%%%mzn-stat: propagations=115004256
%%%mzn-stat: peakDepth=1911
%%%mzn-stat: nogoods=41785
%%%mzn-stat: backjumps=92711
%%%mzn-stat: peakMem=0.00
%%%mzn-stat: time=11.734
%%%mzn-stat: initTime=0.410
%%%mzn-stat: solveTime=11.324
%%%mzn-stat: objective=61
%%%mzn-stat: optTime=6.090
%%%mzn-stat: baseMem=0.00
%%%mzn-stat: trailMem=0.94
%%%mzn-stat: randomSeed=1734694798
%%%mzn-stat: nSolutions=2
%%%mzn-stat-end

{U(MLOAD_0), U(ISZERO_0), U(ISZERO_1), U(MLOAD_1), U(MLOAD_2), U(MLOAD_3), U(MLOAD_4), U(MLOAD_5), B(ADD_0), B(AND_0), B(ADD_1), B(SUB_0), B(SHL_0), B(ADD_2), B(AND_1), B(ADD_3), B(ADD_4), B(AND_2), B(ADD_5), B(ADD_6), B(ADD_7), B(ADD_8), P(PUSH [tag]_0), P(PUSH_0), P(PUSH_1), P(PUSH_2), P(PUSH_3), P(PUSH_4), P(PUSH_5), P(PUSH_6), P(PUSH_7), P(PUSH_8), S(MSTORE_0), S(MSTORE_1), S(MSTORE_2), S(MSTORE_3), S(MSTORE_4), DUP(1), DUP(2), DUP(3), DUP(4), DUP(5), DUP(6), DUP(7), DUP(8), DUP(9), DUP(10), DUP(11), DUP(12), DUP(13), DUP(14), DUP(15), DUP(16), SWAP(1), SWAP(2), SWAP(3), SWAP(4), SWAP(5), SWAP(6), SWAP(7), SWAP(8), SWAP(9), SWAP(10), SWAP(11), SWAP(12), SWAP(13), SWAP(14), SWAP(15), SWAP(16), POP, NOP}
uses: [0, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6, 1, 1, 1, 3, 2, 1, 2, 1, 2, 1, 1, 2]
creates: [., s1, s2, s3, s7, s14, s18, s20, s21, s4, s5, s6, s8, s9, s11, s12, s13, s15, s16, s17, s19, s22, s23, s10, s24, s25, s26, s27, s28, s29, s30, s31, s32, ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., .]
creator: [U(MLOAD_0), U(ISZERO_0), U(ISZERO_1), U(MLOAD_1), U(MLOAD_2), U(MLOAD_3), U(MLOAD_4), U(MLOAD_5), B(ADD_0), B(AND_0), B(ADD_1), B(SUB_0), B(SHL_0), B(ADD_2), B(AND_1), B(ADD_3), B(ADD_4), B(AND_2), B(ADD_5), B(ADD_6), B(ADD_7), B(ADD_8), P(PUSH [tag]_0), P(PUSH_0), P(PUSH_1), P(PUSH_2), P(PUSH_3), P(PUSH_4), P(PUSH_5), P(PUSH_6), P(PUSH_7), P(PUSH_8)]
maxdups = 15 maxpops = 0 uses: 48 null = 0 unused: {} creates something: 32 startlength: 1
lcount: [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
ucount: [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 2, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 0, 26]
MLOAD_0 -> s23:U -> B(ADD_8)
ISZERO_0 -> s1:U -> U(MLOAD_0)
ISZERO_1 -> s2:U -> U(ISZERO_0)
MLOAD_1 -> s6:U -> B(ADD_1)
MLOAD_2 -> s13:U -> B(ADD_3)
MLOAD_3 -> s17:U -> B(ADD_5)
MLOAD_4 -> s24:U -> P(PUSH_0)
AND_0 -> {U(MLOAD_1),B(SUB_0)}
AND_1 -> {U(MLOAD_2),P(PUSH_4)}
AND_2 -> {U(MLOAD_3),P(PUSH_6)}
ADD_0 -> s24:2Z -> P(PUSH_0)
ADD_1 -> s24:2Z -> P(PUSH_0)
ADD_2 -> s27:2Z -> P(PUSH_3)
ADD_3 -> s27:2Z -> P(PUSH_3)
ADD_4 -> s29:2Z -> P(PUSH_5)
ADD_5 -> s29:2Z -> P(PUSH_5)
ADD_6 -> s31:2Z -> P(PUSH_7)
ADD_7 -> s32:2Z -> P(PUSH_8)
ADD_8 -> s32:2Z -> P(PUSH_8)
SUB_0 -> s9:1N -> B(SHL_0)
SHL_0 -> s26:1Z -> P(PUSH_2)
SHL_0 -> s25:12 -> P(PUSH_1)
MSTORE_1 -> s22:1N -> B(ADD_7)
MSTORE_2 -> s4:1N -> B(ADD_0)
MSTORE_3 -> s11:1N -> B(ADD_2)
MSTORE_4 -> s15:1N -> B(ADD_4)
WARNING: the --time-out flag has recently been changed.The time-out is now provided in milliseconds instead of seconds

['PUSH_0', 'MLOAD_4', 'PUSH_6', 'DUP3', 'PUSH_4', 'SWAP4', 'SWAP4', 'DUP5', 'DUP5', 'DUP6', 'DUP8', 'DUP8', 'DUP10', 'MLOAD_5', 'PUSH_1', 'PUSH_1', 'PUSH_2', 'SHL_0', 'SUB_0', 'SWAP4', 'PUSH_7', 'ADD_6', 'SWAP11', 'SWAP2', 'MSTORE_0', 'PUSH_8', 'ADD_8', 'MLOAD_0', 'ISZERO_0', 'ISZERO_1', 'DUP9', 'PUSH_8', 'ADD_7', 'MSTORE_1', 'PUSH_0', 'ADD_1', 'MLOAD_1', 'AND_0', 'SWAP1', 'PUSH_0', 'ADD_0', 'MSTORE_2', 'PUSH_3', 'ADD_3', 'MLOAD_2', 'AND_1', 'DUP4', 'PUSH_3', 'ADD_2', 'MSTORE_3', 'PUSH_5', 'ADD_5', 'MLOAD_3', 'AND_2', 'SWAP1', 'PUSH [tag]_0', 'SWAP2', 'SWAP1', 'PUSH_5', 'ADD_4', 'MSTORE_4']
61
63

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH [tag] SWAP2 SWAP1 PUSH0 PUSH1 0xa0 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 ADD MLOAD ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB PUSH1 0x40 DUP5 ADD MLOAD AND PUSH1 0x40 DUP4 ADD MSTORE PUSH4 0xffffffff PUSH1 0x60 DUP5 ADD MLOAD AND PUSH1 0x60 DUP4 ADD MSTORE PUSH6 0xffffffffffff PUSH1 0x80 DUP5 ADD MLOAD AND PUSH1 0x80 DUP4 ADD MSTORE SWAP3 SWAP2 POP POP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH6 0xffffffffffff DUP3 PUSH4 0xffffffff SWAP4 SWAP4 DUP5 DUP5 DUP6 DUP8 DUP8 DUP10 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP4 PUSH1 0xa0 ADD SWAP11 SWAP2 MSTORE PUSH1 0x20 ADD MLOAD ISZERO ISZERO DUP9 PUSH1 0x20 ADD MSTORE PUSH1 0x40 ADD MLOAD AND SWAP1 PUSH1 0x40 ADD MSTORE PUSH1 0x60 ADD MLOAD AND DUP4 PUSH1 0x60 ADD MSTORE PUSH1 0x80 ADD MLOAD AND SWAP1 PUSH [tag] SWAP2 SWAP1 PUSH1 0x80 ADD MSTORE

Total time: 12.97 s

Intermediate files stored at /tmp/gasol_231790c4f4304168bca35b1b47b23d30/

Optimized code stored in block3_optimized.json_solc
Optimality results stored in block3_statistics_seq.csv

Estimated initial gas: 185
Estimated gas optimized: 183

Estimated initial size in bytes: 88
Estimated size optimized in bytes: 86

Initial number of instructions: 63
Final number of instructions: 61
